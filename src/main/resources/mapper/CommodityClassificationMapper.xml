<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bat.wz.mbg.mapper.CommodityClassificationMapper">
  <resultMap id="BaseResultMap" type="com.bat.wz.mbg.entity.CommodityClassification">
    <id column="Classify_ID" jdbcType="INTEGER" property="classifyId" />
    <result column="Good_kinds_Name" jdbcType="VARCHAR" property="goodKindsName" />
    <result column="Upper_ID" jdbcType="INTEGER" property="upperId" />
    <result column="Upper_Name" jdbcType="VARCHAR" property="upperName" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Classify_ID, Good_kinds_Name, Upper_ID, Upper_Name, Description
  </sql>
  <select id="selectByExample" parameterType="com.bat.wz.mbg.entity.CommodityClassificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodity_classification
    where Classify_ID = #{classifyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodity_classification
    where Classify_ID = #{classifyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bat.wz.mbg.entity.CommodityClassificationExample">
    delete from commodity_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bat.wz.mbg.entity.CommodityClassification">
    insert into commodity_classification (Classify_ID, Good_kinds_Name, Upper_ID, 
      Upper_Name, Description)
    values (#{classifyId,jdbcType=INTEGER}, #{goodKindsName,jdbcType=VARCHAR}, #{upperId,jdbcType=INTEGER}, 
      #{upperName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bat.wz.mbg.entity.CommodityClassification">
    insert into commodity_classification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classifyId != null">
        Classify_ID,
      </if>
      <if test="goodKindsName != null">
        Good_kinds_Name,
      </if>
      <if test="upperId != null">
        Upper_ID,
      </if>
      <if test="upperName != null">
        Upper_Name,
      </if>
      <if test="description != null">
        Description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classifyId != null">
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="goodKindsName != null">
        #{goodKindsName,jdbcType=VARCHAR},
      </if>
      <if test="upperId != null">
        #{upperId,jdbcType=INTEGER},
      </if>
      <if test="upperName != null">
        #{upperName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bat.wz.mbg.entity.CommodityClassificationExample" resultType="java.lang.Long">
    select count(*) from commodity_classification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodity_classification
    <set>
      <if test="record.classifyId != null">
        Classify_ID = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.goodKindsName != null">
        Good_kinds_Name = #{record.goodKindsName,jdbcType=VARCHAR},
      </if>
      <if test="record.upperId != null">
        Upper_ID = #{record.upperId,jdbcType=INTEGER},
      </if>
      <if test="record.upperName != null">
        Upper_Name = #{record.upperName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodity_classification
    set Classify_ID = #{record.classifyId,jdbcType=INTEGER},
      Good_kinds_Name = #{record.goodKindsName,jdbcType=VARCHAR},
      Upper_ID = #{record.upperId,jdbcType=INTEGER},
      Upper_Name = #{record.upperName,jdbcType=VARCHAR},
      Description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bat.wz.mbg.entity.CommodityClassification">
    update commodity_classification
    <set>
      <if test="goodKindsName != null">
        Good_kinds_Name = #{goodKindsName,jdbcType=VARCHAR},
      </if>
      <if test="upperId != null">
        Upper_ID = #{upperId,jdbcType=INTEGER},
      </if>
      <if test="upperName != null">
        Upper_Name = #{upperName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where Classify_ID = #{classifyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bat.wz.mbg.entity.CommodityClassification">
    update commodity_classification
    set Good_kinds_Name = #{goodKindsName,jdbcType=VARCHAR},
      Upper_ID = #{upperId,jdbcType=INTEGER},
      Upper_Name = #{upperName,jdbcType=VARCHAR},
      Description = #{description,jdbcType=VARCHAR}
    where Classify_ID = #{classifyId,jdbcType=INTEGER}
  </update>
</mapper>